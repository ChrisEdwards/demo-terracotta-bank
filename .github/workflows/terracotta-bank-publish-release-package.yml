# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Terracotta Bank - Publish Release Package

on:
  schedule:
    - cron: '0 0 * * 0' # Weekly at midnight on Sunday
  workflow_dispatch:
  # release:
  #   types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'corretto'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0

    - name: Install xmllint
      run: sudo apt-get install -y libxml2-utils

    - name: Build WAR with Gradle
      run: ./gradlew clean build -x test

    - name: Fetch Latest Contrast Agent Version
      id: fetch-latest-contrast-agent-version
      run: |
        # Fetch the Maven metadata XML
        curl -s https://repo1.maven.org/maven2/com/contrastsecurity/contrast-agent/maven-metadata.xml -o maven-metadata.xml

        # Extract the latest release version
        LATEST_RELEASE_VERSION=$(xmllint --xpath 'string(/metadata/versioning/release)' maven-metadata.xml)

        echo "Latest release version is $LATEST_RELEASE_VERSION"
        echo "::set-output name=latest_version::$LATEST_RELEASE_VERSION"

    - name: Download Latest Release Contrast Agent If Newer
      run: |
        PREVIOUS_RELEASE_VERSION="your_current_version_here" # Replace with your logic to determine the current version
        LATEST_RELEASE_VERSION=${{ steps.fetch-latest-version.outputs.latest_version }}

        if [ "$LATEST_RELEASE_VERSION" != "$PREVIOUS_RELEASE_VERSION" ]; then
          echo "Downloading Contrast Agent version $LATEST_VERSION"
          wget -O contrast-agent.jar "https://repo1.maven.org/maven2/com/contrastsecurity/contrast-agent/$LATEST_RELEASE_VERSION/contrast-agent-$LATEST_RELEASE_VERSION.jar"
        else
          echo "Already using the latest version: $PREVIOUS_RELEASE_VERSION"
        fi

    - name: Prepare Terracotta Bank Release Package
      id: prepare-terracotta-bank-release-package
      run: |
        mkdir release
        cp build/libs/terracotta.war release/
        cp contrast-agent.jar release/

    # - name: Create Terracotta Bank Release Package Zip
    #   id: create-terracotta-bank-release-package-zip
    #   uses: actions/create-release
    
    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
    # - name: Publish to GitHub Packages
    #   run: ./gradlew publish
    #   env:
    #     USERNAME: ${{ github.actor }}
    #     TOKEN: ${{ secrets.GITHUB_TOKEN }}
